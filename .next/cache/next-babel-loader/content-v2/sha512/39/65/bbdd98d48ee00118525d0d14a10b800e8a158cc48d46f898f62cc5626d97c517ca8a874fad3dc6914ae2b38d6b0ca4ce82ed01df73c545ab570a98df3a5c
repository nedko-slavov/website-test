{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nedko/Sites/website-test/pages/index.tsx\";\nimport { useState } from 'react';\n\nconst Counter = ({\n  initialCount\n}) => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(initialCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increace count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"main\", {\n  children: /*#__PURE__*/_jsxDEV(Counter, {\n    initialCount: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\nexport default App;","map":{"version":3,"sources":["/Users/nedko/Sites/website-test/pages/index.tsx"],"names":["useState","Counter","initialCount","count","setCount","App"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAMA,MAAMC,OAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAC3D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,YAAD,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAME,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CATD;;AAUA,MAAME,GAAa,GAAG,mBACpB;AAAA,yBACE,QAAC,OAAD;AAAS,IAAA,YAAY,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAMA,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\ninterface CounterType {\n  initialCount: number\n}\n\nconst Counter: React.FC<CounterType> = ({ initialCount }) => {\n  const [count, setCount] = useState(initialCount)\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>Increace count</button>\n      <p>{count}</p>\n    </div>\n  )\n}\nconst App: React.FC = () => (\n  <main>\n    <Counter initialCount={0} />\n  </main>\n)\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}