{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nedko/Sites/website-test/components/Counter/index.tsx\";\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst Counter = ({\n  initialCount\n}) => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(initialCount);\n  useEffect(() => {\n    console.log(123);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increace count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\nCounter.propTypes = {\n  initialCount: PropTypes.number.isRequired\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/nedko/Sites/website-test/components/Counter/index.tsx"],"names":["PropTypes","useState","Counter","initialCount","count","setCount","useEffect","console","log","propTypes","number","isRequired"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAMA,MAAMC,OAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAC3D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,YAAD,CAAlC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;AAeAF,OAAO,CAACO,SAAR,GAAoB;AAClBN,EAAAA,YAAY,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AADb,CAApB;AAIA,eAAeT,OAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\ninterface CounterType {\n  initialCount: number;\n}\n\nconst Counter: React.FC<CounterType> = ({ initialCount }) => {\n  const [count, setCount] = useState(initialCount);\n\n  useEffect(() => {\n    console.log(123);\n  }, []);\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>Increace count</button>\n      <p>{count}</p>\n    </div>\n  );\n};\n\nCounter.propTypes = {\n  initialCount: PropTypes.number.isRequired,\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}