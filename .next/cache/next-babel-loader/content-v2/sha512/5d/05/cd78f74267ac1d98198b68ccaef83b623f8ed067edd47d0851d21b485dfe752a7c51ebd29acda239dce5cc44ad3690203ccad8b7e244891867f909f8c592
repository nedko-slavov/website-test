{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nedko/Sites/website-test/components/Counter/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nvar Counter = function Counter() {\n  _s();\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setCount(count + 1);\n      },\n      children: \"Increace count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Counter;\nCounter.propTypes = {\n  initialCount: PropTypes.number.isRequired\n};\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/nedko/Sites/website-test/components/Counter/index.tsx"],"names":["PropTypes","useState","Counter","count","setCount","propTypes","initialCount","number","isRequired"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AAAA;;AAAA,kBACJD,QAAQ,CAAC,CAAD,CADJ;AAAA,MACvBE,KADuB;AAAA,MAChBC,QADgB;;AAG9B,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CATD;;GAAMD,O;;KAAAA,O;AAWNA,OAAO,CAACG,SAAR,GAAoB;AAClBC,EAAAA,YAAY,EAAEN,SAAS,CAACO,MAAV,CAAiBC;AADb,CAApB;AAIA,eAAeN,OAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst Counter: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>Increace count</button>\n      <p>{count}</p>\n    </div>\n  );\n};\n\nCounter.propTypes = {\n  initialCount: PropTypes.number.isRequired,\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}