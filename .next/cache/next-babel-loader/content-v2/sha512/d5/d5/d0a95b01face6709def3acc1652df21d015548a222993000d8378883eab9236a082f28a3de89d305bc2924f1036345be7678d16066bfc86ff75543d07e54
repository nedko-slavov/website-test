{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nedko/Sites/website-test/pages/index.tsx\";\nimport { useState } from 'react';\n\nconst Counter = ({\n  initialCount\n}) => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(initialCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increace count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nconst IndexPage = ({\n  launch\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Counter, {\n      initialCount: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default IndexPage;\nexport const getServerSideProps = async () => {\n  const response = await fetch('https://api.spacexdata.com/v3/launches/next');\n  const nextLaunch = await response.json();\n  return {\n    props: {\n      launch: {\n        mission: nextLaunch.mission_name,\n        site: nextLaunch.launch_site.site_name_long,\n        timestamp: nextLaunch.launch_date_unix * 1000,\n        rocket: nextLaunch.rocket.rocket_name\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nedko/Sites/website-test/pages/index.tsx"],"names":["useState","Counter","initialCount","count","setCount","IndexPage","launch","getServerSideProps","response","fetch","nextLaunch","json","props","mission","mission_name","site","launch_site","site_name_long","timestamp","launch_date_unix","rocket","rocket_name"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAMA,MAAMC,OAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAC3D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,YAAD,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAME,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CATD;;AAmBA,MAAME,SAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjD,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAOA,eAAeD,SAAf;AAEA,OAAO,MAAME,kBAA6C,GAAG,YAAY;AACvE,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;AACA,QAAMC,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLN,MAAAA,MAAM,EAAE;AACNO,QAAAA,OAAO,EAAEH,UAAU,CAACI,YADd;AAENC,QAAAA,IAAI,EAAEL,UAAU,CAACM,WAAX,CAAuBC,cAFvB;AAGNC,QAAAA,SAAS,EAAER,UAAU,CAACS,gBAAX,GAA8B,IAHnC;AAINC,QAAAA,MAAM,EAAEV,UAAU,CAACU,MAAX,CAAkBC;AAJpB;AADH;AADF,GAAP;AAUD,CAbM","sourcesContent":["import { GetServerSideProps, NextPage } from 'next'\nimport { useState } from 'react'\n\ninterface CounterType {\n  initialCount: number\n}\n\nconst Counter: React.FC<CounterType> = ({ initialCount }) => {\n  const [count, setCount] = useState(initialCount)\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>Increace count</button>\n      <p>{count}</p>\n    </div>\n  )\n}\n\ninterface Props {\n  launch: {\n    mission: string\n    site: string\n    timestamp: number\n    rocket: string\n  }\n}\nconst IndexPage: NextPage<Props> = ({ launch }) => {\n  return (\n    <main>\n      <Counter initialCount={0} />\n    </main>\n  )\n}\nexport default IndexPage\n\nexport const getServerSideProps: GetServerSideProps<Props> = async () => {\n  const response = await fetch('https://api.spacexdata.com/v3/launches/next')\n  const nextLaunch = await response.json()\n  return {\n    props: {\n      launch: {\n        mission: nextLaunch.mission_name,\n        site: nextLaunch.launch_site.site_name_long,\n        timestamp: nextLaunch.launch_date_unix * 1000,\n        rocket: nextLaunch.rocket.rocket_name,\n      },\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}